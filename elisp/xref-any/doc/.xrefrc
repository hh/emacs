// 
// This is demonstration file presenting the most commonly used
// options passed to Xrefactory (and to 'xref' task) by a 
// personal '${HOME}/.xrefrc' file.
// For more info about this file and its format read the 'xrefrc'
// manual page, for more info about xref options read the 'xref' 
// manual page.
//
// Please appropriate this file to your project(s) before using Xref!
// 

// In order to handle multiple user's projects the _xrefrc file is
// divided into sections.  Each section starts by the name of the section
// enclosed into [] brackets. By convention (and for possible automatic
// project detection) the project name is the name of principal directory
// containing your sources.

[__SECTION__]       // section marker: one section per project

// Following options specifies source files of the project. Those files are
// processed when invoking xref with the '-create' or '-p __SECTION__' 
// option or when invoked by 'Create Xref TAG file' function from (X)Emacs.
// In particular the '-r' option specifies that directories will
// be recursively searched for all files with the '.c' and '.java' suffixes.
// You may insert here several directory as well as single file names.

-r __SECTION__

// The following option specifies where the file containing cross
// references is placed. Please use an absolute path here.

-refs __HOME__/Xrefs


// The following option specifies the number of files into which the cross 
// references are splitted. The recommended number is the number of lines 
// in source code divided by 3 000. This number specifies also the number of
// cross-reference HTML files.

-refnum=10


// ------------------------------------------------------------------
//                       C - specific options
// Following options exemplify default macro definitions for the
// C pre-processor. Please adjust this! (this does not concerns
// Java users).

-DDEBUG             // example of a command line macro definition
-DMY_VERSION=2.7    // example of a macro with body

// Following options specify where to search include files for the
// C language pre-processor (if possible use absolute paths
// here. Relative paths
// are relative to the currently processed source file directory).
// Please adjust this to your project! (this does not concerns
// Java users).

-I ../h
-I ../include
-I ../../h
-I ../../include
-I ../../../h
-I ../../../include


// Following option causes that editing macros do not update references 
// from included files while answering a request. It is recommended
// to use this option when working on a large project or on a project
// loading large include files.

// -noincluderefresh


// ------------------------------------------------------------------
//                       Java - specific options
// The following option specifies where to search your Java classes.
// This option overrides the CLASSPATH environment value.
// If you are using Java and your CLASSPATH variable is not set,
// uncomment and adjust this! 

// -classpath __HOME__/java

// The following option specifies where to search implicit Java classes.
// This option overrides the JDKCLASSPATH environment value.
// If you are using Java from other provider then Sun Microsystems
// and your JDKCLASSPATH variable is not set, uncomment and adjust this! 

// -jdkclasspath /usr/local/jdk1.2.2/jre/lib/rt.jar


// If you browse a standard JDK symbol, you may wish to see
// its javadoc documentation. In order to allow this adjust
// following two options. However, you will also need to have an Internet
// browser installed as well as working 'browse-url' package in 
// your (X)Emacs.

-htmljavadocpath=http://java.sun.com/j2se/1.3/docs/api
-htmljavadocavailable=java.applet:java.awt:java.beans:java.io:java.lang:java.math:java.net:java.rmi:java.security:java.sql:java.text:java.util:javax.accessibility:javax.swing:org.omg.CORBA:org.omg.CosNaming


// ------------------------------------------------------------------
//      following options control the form of generated HTML
//   they are meaningfull only if you wish to transform your sources
//                         into HTML format
// ------------------------------------------------------------------


// The following option specifies the directory where the html files 
// created from your sources will be placed. Please use an absolute 
// path here.

-htmlroot=__HOME__/HTML

// The following option sets the tabulator value for HTML output.

-htmltab=8

// The following option causes that lines will be numbered in the
// generated HTML form.

-htmllinenums

// If you like color highlighting of keywords, of comments and
// pre-processor directives and you do not mind if generated HTML files 
// are large, you can switch on colors by commenting out the 
// following line.

-htmlnocolors

// The following options control generating of cross referencing lists.
// Options '-htmlgxlist' and '-htmllxlist' specify respectively whether
// to generate those lists for global and local symbols. 

-htmlgxlist
// -htmllxlist

// Xrefactory can call a compression program on the generated HTML files.
// This option can save a considerable amount of your disk space, however
// several HTML browsers do not support it. If you wish to use this
// possibility, just uncomment following two options, or appropriate
// them to your preferred compressing program (in the -htmlzip option
// the '!' character is replaced by the appropriate file name).

// -htmllinksuffix=.gz
// "-htmlzip=gzip -f !"


////////////////////////////////////////////////////////////////////////
// That is all! The configuration part for your project is done!
////////////////////////////////////////////////////////////////////////



// --------------------------------------------------------------------
// Here follows an example of a section we use to browse Linux kernel 
// sources. If you wish to browse kernel with particular options, adjust
// this.
// --------------------------------------------------------------------

[/usr/src/linux]

-r /usr/src/linux

-DCONFIG_BSD_PROCESS_ACCT
-D__KERNEL__
-D__KERNEL_SYSCALLS__
-DCPU=386
-D__i386__
-D__SMP__
-D__SMP_PROF__
-DEXPORT_SYMTAB
-DSTDC_HEADERS
-DPARANOID
-DMODULE
-DNFS_NEED_XDR_TYPES
-DDEBUG
-DDEBUG_AVL
-DSLAB_DEBUG_SUPPORT
-DSLAB_SELFTEST
-Dasm=__asm__
-Dinline=__inline__
-exactpositionresolve
-resetIncludeDirs    // to remove /usr/include from the begining of includes
-I /usr/src/linux/include
-I /usr/include
-I /usr/src/linux/ibcs/include
-I /usr/src/linux/pcmcia-cs-3.0.9/include
-I /usr/lib/g++-include
-I /usr/lib/gcc-lib/i386-redhat-linux/egcs-2.91.66/include
-I /usr/lib/gcc-lib/i386-redhat-linux/2.7.2.3/include
-I /usr/include/g++
-I /usr/include/g++/std
-refs __HOME__/XLinux
-refnum=1000

-htmltab=8
-htmlroot=__HOME__/HTML
-htmlgxlist
-htmlnocolors
-htmllinenums
-htmlcutpath=__HOME__
// -htmllinksuffix=.gz
// "-htmlzip=gzip -f !"

// --------------------------------------------------------------------
// Here follows an example of a section we use to browse JDK classes.
// --------------------------------------------------------------------

[/usr/java/jdk1.3/src]

-r /usr/java/jdk1.3/src
-refs=__HOME__/Xjdk
-refnum=1000

-htmltab=8
-htmlroot=__HOME__/JHTML
-htmlgxlist
-htmllinenums
-htmlcutpath=__HOME__
-htmlcutpath=/usr/java/jdk1.3/src
-htmlcutpath=/usr
// -htmllinksuffix=.gz
// "-htmlzip=gzip -f !"


// ------------------------------------------------------------------
// Finally there is a very simple section used for the test 
// demo programs which are temporarily placed into the /tmp directory.
// ------------------------------------------------------------------

[/tmp]					// section marker

// source files
/tmp/test.c
/tmp/Test.java

// cross reference file
-refs /tmp/Xtrefs

-htmljavadocpath=http://java.sun.com/j2se/1.3/docs/api
-htmljavadocavailable=java.applet:java.awt:java.beans:java.io:java.lang:java.math:java.net:java.rmi:java.security:java.sql:java.text:java.util:javax.accessibility:javax.swing:org.omg.CORBA:org.omg.CosNaming









